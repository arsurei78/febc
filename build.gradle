buildscript {
    ext {
        queryDslVersion = "5.0.0"
        egovframe = "4.1.0"
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "org.sonarqube" version "4.2.1.3168"
}

group = 'net.febc'
version = 'SNAPSHOT'
sourceCompatibility = "17"
targetCompatibility = JavaVersion.VERSION_17

application {
    mainClassName = "net.febc.boot.EgovBootApplication"
}

bootJar {
    archivesBaseName = 'sessionTemplate'
    archiveFileName = 'empty_project-SNAPSHOT.jar'
    archiveVersion = "0.0.1"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.egovframe.go.kr/maven/")
        metadataSources {
            mavenPom()
            artifact()
        }
    }
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

compileJava.dependsOn compileQuerydsl

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
//    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // DB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2:2.2.222'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    testAnnotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    // EgovFrame`
    implementation("org.egovframe.rte:org.egovframe.rte.ptl.mvc:${egovframe}") {
        exclude group: 'org.egovframe.rte', module: 'spring-modules-validation'
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation "org.egovframe.rte:org.egovframe.rte.fdl.cmmn:${egovframe}"
    implementation "org.egovframe.rte:org.egovframe.rte.bat.core:${egovframe}"
    implementation "org.egovframe.rte:org.egovframe.rte.fdl.idgnr:${egovframe}"
    implementation "org.egovframe.rte:org.egovframe.rte.fdl.property:${egovframe}"

    // 기타 유틸
    implementation 'org.apache.commons:commons-lang3:3.0'
    implementation 'org.apache.commons:commons-dbcp2'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'commons-codec:commons-codec:1.9'
    implementation 'commons-fileupload:commons-fileupload:1.5'
    implementation 'com.googlecode.json-simple:json-simple:1.1'

    // JSON / JWT
    implementation 'com.auth0:java-jwt:3.19.2'
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"

    // Spring Security
    implementation "org.springframework.security:spring-security-core:5.7.1"
    implementation "org.springframework.security:spring-security-web:5.7.1"
    implementation "org.springframework.security:spring-security-config:5.7.1"

    // Swagger
//    implementation "io.springfox:springfox-boot-starter:3.0.0"
//    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // JUnit & Mockito
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.mockito:mockito-core:5.1.1'
    testImplementation 'org.mockito:mockito-inline:5.1.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.1.1'
}

test {
    useJUnitPlatform()
    processResources {
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
    }
}